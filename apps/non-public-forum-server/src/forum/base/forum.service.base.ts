/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Forum as PrismaForum,
  Message as PrismaMessage,
  Project as PrismaProject,
} from "@prisma/client";

export class ForumServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ForumCountArgs, "select">): Promise<number> {
    return this.prisma.forum.count(args);
  }

  async forums(args: Prisma.ForumFindManyArgs): Promise<PrismaForum[]> {
    return this.prisma.forum.findMany(args);
  }
  async forum(args: Prisma.ForumFindUniqueArgs): Promise<PrismaForum | null> {
    return this.prisma.forum.findUnique(args);
  }
  async createForum(args: Prisma.ForumCreateArgs): Promise<PrismaForum> {
    return this.prisma.forum.create(args);
  }
  async updateForum(args: Prisma.ForumUpdateArgs): Promise<PrismaForum> {
    return this.prisma.forum.update(args);
  }
  async deleteForum(args: Prisma.ForumDeleteArgs): Promise<PrismaForum> {
    return this.prisma.forum.delete(args);
  }

  async findMessages(
    parentId: string,
    args: Prisma.MessageFindManyArgs
  ): Promise<PrismaMessage[]> {
    return this.prisma.forum
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .messages(args);
  }

  async getProject(parentId: string): Promise<PrismaProject | null> {
    return this.prisma.forum
      .findUnique({
        where: { id: parentId },
      })
      .project();
  }
}
